---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rmf-web-rmf-server-db
  labels:
    app: rmf-web-rmf-server
    component: db
spec:
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: rmf-web-rmf-server-db
  labels:
    app: rmf-web-rmf-server
    component: db
spec:
  selector:
    app: rmf-web-rmf-server
    component: db
  ports:
    - port: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rmf-web-rmf-server-db
  labels:
    app: rmf-web-rmf-server
    component: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rmf-web-rmf-server
      component: db
  template:
    metadata:
      labels:
        app: rmf-web-rmf-server
        component: db
    spec:
      containers:
        - name: postgresql
          image: {{ .Values.global.REGISTRY_DOCKER | default "docker.io" }}/{{ .Values.keycloak.POSTGRES_IMAGE }}
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: rmf-web-rmf-server-secret
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rmf-web-rmf-server-secret
                  key: DB_PASSWORD
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: rmf-web-rmf-server-db
      volumes:
        - name: rmf-web-rmf-server-db
          persistentVolumeClaim:
            claimName: rmf-web-rmf-server-db
      tolerations:
        - key: reserved
          operator: Equal
          value: rmf
          effect: NoSchedule
---
apiVersion: v1
kind: Service
metadata:
  name: rmf-web-rmf-server
  labels:
    app: rmf-web-rmf-server
    component: app
spec:
  selector:
    app: rmf-web-rmf-server
    component: app
  ports:
    - protocol: TCP
      port: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rmf-web-rmf-server
  labels:
    app: rmf-web-rmf-server
    component: app
  # TODO: Uncomment this when we switched to logfmt
  # annotations:
  #   logging.format: logfmt
spec:
  selector:
    matchLabels:
      app: rmf-web-rmf-server
      component: app
  template:
    metadata:
      labels:
        app: rmf-web-rmf-server
        component: app
    spec:
      containers:
        - name: rmf-web-rmf-server
          image: {{ .Values.global.REGISTRY_RMF | default "localhost" }}/{{ .Values.rmf_web.API_SERVER_IMAGE }}:{{ .Values.global.DEPLOYMENT_IMAGE_TAG }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: RMF_USE_SIM_TIME
              value: {{ .Values.global.RMF_USE_SIM_TIME | quote }}
            - name: RMF_SERVER_USE_SIM_TIME
              value: {{ .Values.global.RMF_USE_SIM_TIME | quote }}
            - name: {{ .Values.global.DDS_ENV | quote }}
              value: {{ .Values.global.DDS_CONFIG | quote }}
            - name: ROS_DOMAIN_ID
              value: {{ .Values.global.ROS_DOMAIN_ID | quote }}
            - name: RMW_IMPLEMENTATION
              value: {{ .Values.global.RMW_IMPLEMENTATION | quote }}
            - name: RMF_API_SERVER_CONFIG
              value: /rmf-web-rmf-server-config/rmf_server_config.py
          volumeMounts:
            - mountPath: /rmf-web-rmf-server-config
              name: rmf-web-rmf-server-configmap
              readOnly: true
            - mountPath: {{ .Values.global.DDS_CONFIG_MOUNTPATH | quote }}
              name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
              readOnly: true
            - mountPath: /jwt-configmap
              name: jwt-pub-key
              readOnly: true
            - mountPath: /etc/localtime
              subPath: localtime
              name: vol-tz-singapore
      volumes:
        - name: rmf-web-rmf-server-configmap
          configMap:
            name: rmf-web-rmf-server-configmap
        - name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
          configMap:
            name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
        - name: jwt-pub-key
          configMap:
            name: jwt-pub-key
        - name: vol-tz-singapore
          configMap:
            name: cm-tz-singapore
      tolerations:
        - key: reserved
          operator: Equal
          value: rmf
          effect: NoSchedule
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rmf-web-rmf-server
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    cert-manager.io/cluster-issuer: {{ .Values.CERT_MANAGER_ISSUER }}
spec:
  ingressClassName: nginx
  rules:
    - host: {{ .Values.hostName | quote }}
      http:
        paths:
          - path: /rmf/api/v1(/(?!_internal)|$)(.*) # must exclude `_internal` as that is not secure
            pathType: ImplementationSpecific #Prefix
            backend:
              service:
                name: rmf-web-rmf-server
                port:
                  number: 8000
  tls:
    - hosts:
        - {{ .Values.hostName | quote }}
      secretName: rmf-web-ingress-tls
---
apiVersion: v1
kind: Service
metadata:
  name: rmf-web-dashboard
  labels:
    app: rmf-web-dashboard
spec:
  selector:
    app: rmf-web-dashboard
  ports:
    - protocol: TCP
      port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rmf-web-dashboard
  labels:
    app: rmf-web-dashboard
spec:
  selector:
    matchLabels:
      app: rmf-web-dashboard
  template:
    metadata:
      labels:
        app: rmf-web-dashboard
    spec:
      containers:
        - name: rmf-web-dashboard
          image: {{ .Values.global.REGISTRY_RMF | default "localhost" }}/{{ .Values.rmf_web.DASHBOARD_IMAGE }}:{{ .Values.global.DEPLOYMENT_IMAGE_TAG }}
          imagePullPolicy: IfNotPresent
          env:
            - name: RMF_SERVER_URL
              value: {{ .Values.baseUrl }}/rmf/api/v1
            - name: TRAJECTORY_SERVER_URL
              value: {{ .Values.baseUrl }}/trajectory
            - name: KEYCLOAK_URL
              value: {{ .Values.baseUrl }}/auth/
          ports:
            - containerPort: 80
      tolerations:
        - key: reserved
          operator: Equal
          value: rmf
          effect: NoSchedule
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rmf-web-dashboard
  annotations:
    cert-manager.io/cluster-issuer: {{ .Values.CERT_MANAGER_ISSUER }}
spec:
  ingressClassName: nginx
  rules:
    - host: {{ .Values.hostName | quote }}
      http:
        paths:
          - path: /dashboard
            pathType: Prefix
            backend:
              service:
                name: rmf-web-dashboard
                port:
                  number: 80
  tls:
    - hosts:
        - {{ .Values.hostName | quote }}
      secretName: rmf-web-ingress-tls
---
