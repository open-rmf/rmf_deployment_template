name: Nightly
on:
  schedule:
    # 2am SGT
    - cron: '0 18 * * *'
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: read
  id-token: write
env:
  IMAGE_NS: ghcr.io/open-rmf/rmf_deployment_template/rmf-deployment
  IMAGE_TAG: nightly
jobs:
  builder:
    name: builder
    runs-on: ubuntu-latest
    steps:
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: checkout
        uses: actions/checkout@v4
      - name: build and push
        run: |
          IMAGE=$IMAGE_NS/builder:$IMAGE_TAG
          docker build -t $IMAGE dockerfiles/builder
          docker push $IMAGE
  rmf:
    name: rmf
    runs-on: ubuntu-latest
    needs: builder
    steps:
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: checkout
        uses: actions/checkout@v4
      - name: build and push
        run: |
          IMAGE=$IMAGE_NS/rmf:$IMAGE_TAG
          BUILDER_IMAGE=$IMAGE_NS/builder:$IMAGE_TAG
          . dockerfiles/build-args.sh
          docker build -t $IMAGE $RMF_BUILD_ARGS dockerfiles/rmf
          docker push $IMAGE
  rmf-site:
    name: rmf-site
    runs-on: ubuntu-latest
    needs: rmf
    steps:
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: checkout
        uses: actions/checkout@v4
      - name: build and push
        run: |
          IMAGE=$IMAGE_NS/rmf-site:$IMAGE_TAG
          BUILDER_IMAGE=$IMAGE_NS/rmf:$IMAGE_TAG
          . dockerfiles/build-args.sh
          docker build -t $IMAGE $RMF_SITE_BUILD_ARGS dockerfiles/rmf-site
          docker push $IMAGE
  api_server:
    name: api-server
    runs-on: ubuntu-latest
    needs: builder
    steps:
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: checkout
        uses: actions/checkout@v4
      - name: build and push
        run: |
          IMAGE=$IMAGE_NS/api-server:$IMAGE_TAG
          BUILDER_IMAGE=$IMAGE_NS/builder:$IMAGE_TAG
          . dockerfiles/build-args.sh
          docker build -t $IMAGE $API_SERVER_BUILD_ARGS dockerfiles/rmf-web/api-server
          docker push $IMAGE
  dashboard:
    name: dashboard
    runs-on: ubuntu-latest
    steps:
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: checkout
        uses: actions/checkout@v4
      - name: build and push
        run: |
          IMAGE=$IMAGE_NS/dashboard:$IMAGE_TAG
          . dockerfiles/build-args.sh
          docker build -t $IMAGE $DASHBOARD_BUILD_ARGS dockerfiles/rmf-web/dashboard
          docker push $IMAGE
  ## Dashboard without custom url, use defaults env for react app for local testing
  dashboard-local:
    name: dashboard-local
    runs-on: ubuntu-latest
    steps:
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: checkout
        uses: actions/checkout@v4
      - name: build and push
        run: |
          IMAGE=$IMAGE_NS/dashboard-local:$IMAGE_TAG
          . dockerfiles/build-args.sh
          docker build -t $IMAGE $DASHBOARD_LOCAL_BUILD_ARGS dockerfiles/rmf-web/dashboard
          docker push $IMAGE
  keycloak_setup:
    name: keycloak-setup
    runs-on: ubuntu-latest
    steps:
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: checkout
        uses: actions/checkout@v4
      - name: build and push
        run: |
          IMAGE=$IMAGE_NS/keycloak-setup:$IMAGE_TAG
          docker build -t $IMAGE dockerfiles/rmf-web/keycloak-setup
          docker push $IMAGE
  rmf-sim:
    name: rmf-sim
    runs-on: ubuntu-latest
    needs: rmf
    steps:
      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: checkout
        uses: actions/checkout@v4
      - name: build and push
        run: |
          IMAGE=$IMAGE_NS/rmf-sim:$IMAGE_TAG
          BUILDER_IMAGE=$IMAGE_NS/rmf:$IMAGE_TAG
          . dockerfiles/build-args.sh
          docker build -t $IMAGE $RMF_SIM_BUILD_ARGS dockerfiles/rmf-sim
          docker push $IMAGE
