---
apiVersion: v1
kind: Pod
namespace: 
metadata:
  name: rmf-traffic-schedule
spec:
  restartPolicy: Always
  hostNetwork: true
  containers:
    - name: rmf-traffic-schedule
      image: {{ .Values.builder_ns }}/rmf
      imagePullPolicy: Always
      env:
        - name: RMF_USE_SIM_TIME
          value: {{ .Values.global.RMF_USE_SIM_TIME | quote }}
        - name: {{ .Values.global.DDS_ENV | quote }}
          value: {{ .Values.global.DDS_CONFIG | quote }}
        - name: ROS_DOMAIN_ID
          value: {{ .Values.global.ROS_DOMAIN_ID | quote }}
        - name: RMW_IMPLEMENTATION
          value: {{ .Values.global.RMW_IMPLEMENTATION | quote }}
      command: ["/bin/bash"]
      args: 
        - -c
        - > 
          /ros_entrypoint.sh
          ros2 run rmf_traffic_ros2 rmf_traffic_schedule --ros-args
          -p use_sim_time:=$(RMF_USE_SIM_TIME)
      volumeMounts:
        - mountPath: {{ .Values.global.DDS_CONFIG_MOUNTPATH | quote }}
          name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
  volumes:
    - name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
      configMap:
        name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}

---
apiVersion: v1
kind: Pod
namespace: 
metadata:
  name: rmf-task-dispatcher
spec:
  restartPolicy: Always
  hostNetwork: true
  containers:
    - name: rmf-task-dispatcher
      image: {{ .Values.builder_ns }}/rmf
      imagePullPolicy: Always
      env:
        - name: RMF_USE_SIM_TIME
          value: {{ .Values.global.RMF_USE_SIM_TIME | quote }}
        - name: {{ .Values.global.DDS_ENV | quote }}
          value: {{ .Values.global.DDS_CONFIG | quote }}
        - name: ROS_DOMAIN_ID
          value: {{ .Values.global.ROS_DOMAIN_ID | quote }}
        - name: RMW_IMPLEMENTATION
          value: {{ .Values.global.RMW_IMPLEMENTATION | quote }}
        - name: RMF_BIDDING_TIME_WINDOW
          value: {{ .Values.global.RMF_BIDDING_TIME_WINDOW | quote }}
        - name: RMF_SERVER_URI
          value: {{ .Values.global.RMF_SERVER_URI | quote }}
      command: ["/bin/bash"]
      args: 
       - -c
       - >
        /ros_entrypoint.sh
        ros2 run rmf_task_ros2 rmf_task_dispatcher --ros-args
        -p use_sim_time:=$(RMF_USE_SIM_TIME)
        -p bidding_time_window:=$(RMF_BIDDING_TIME_WINDOW)
        -p server_uri:=$(RMF_SERVER_URI)
      volumeMounts:
        - mountPath: {{ .Values.global.DDS_CONFIG_MOUNTPATH | quote }}
          name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
  volumes:
    - name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
      configMap:
        name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}

---
apiVersion: v1
kind: Pod
namespace: 
metadata:
  name: rmf-door-supervisor
spec:
  restartPolicy: Always
  hostNetwork: true
  containers:
    - name: rmf-door-supervisor
      image: {{ .Values.builder_ns }}/rmf
      imagePullPolicy: Always
      env:
        - name: {{ .Values.global.DDS_ENV | quote }}
          value: {{ .Values.global.DDS_CONFIG | quote }}
        - name: ROS_DOMAIN_ID
          value: {{ .Values.global.ROS_DOMAIN_ID | quote }}
        - name: RMW_IMPLEMENTATION
          value: {{ .Values.global.RMW_IMPLEMENTATION | quote }}
      command: ["/bin/bash"]
      args: 
        - -c
        - >
          /ros_entrypoint.sh
          ros2 run rmf_fleet_adapter door_supervisor
      volumeMounts:
        - mountPath: {{ .Values.global.DDS_CONFIG_MOUNTPATH | quote }}
          name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
  volumes:
    - name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
      configMap:
        name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}

---
apiVersion: v1
kind: Pod
namespace: 
metadata:
  name: rmf-lift-supervisor
spec:
  restartPolicy: Always
  hostNetwork: true
  containers:
    - name: rmf-lift-supervisor
      image: {{ .Values.builder_ns }}/rmf
      imagePullPolicy: Always
      env:
        - name: RMF_USE_SIM_TIME
          value: {{ .Values.global.RMF_USE_SIM_TIME | quote }}
        - name: {{ .Values.global.DDS_ENV | quote }}
          value: {{ .Values.global.DDS_CONFIG | quote }}
        - name: ROS_DOMAIN_ID
          value: {{ .Values.global.ROS_DOMAIN_ID | quote }}
        - name: RMW_IMPLEMENTATION
          value: {{ .Values.global.RMW_IMPLEMENTATION | quote }}
      command: ["/bin/bash"]
      args: 
        - -c
        - >
          /ros_entrypoint.sh
          ros2 run rmf_fleet_adapter lift_supervisor
      volumeMounts:
        - mountPath: {{ .Values.global.DDS_CONFIG_MOUNTPATH | quote }}
          name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
  volumes:
    - name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
      configMap:
        name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}

---
apiVersion: v1
kind: Pod
namespace: 
metadata:
  name: rmf-traffic-blockade
spec:
  restartPolicy: Always
  hostNetwork: true
  containers:
    - name: rmf-traffic-blockade
      image: {{ .Values.builder_ns }}/rmf
      imagePullPolicy: Always
      env:
        - name: RMF_USE_SIM_TIME
          value: {{ .Values.global.RMF_USE_SIM_TIME | quote }}
        - name: {{ .Values.global.DDS_ENV | quote }}
          value: {{ .Values.global.DDS_CONFIG | quote }}
        - name: ROS_DOMAIN_ID
          value: {{ .Values.global.ROS_DOMAIN_ID | quote }}
        - name: RMW_IMPLEMENTATION
          value: {{ .Values.global.RMW_IMPLEMENTATION | quote }}
      command: ["/bin/bash"]
      args: 
        - -c
        - >
          /ros_entrypoint.sh
          ros2 run rmf_traffic_ros2 rmf_traffic_blockade --ros-args
          -p use_sim_time:=$(RMF_USE_SIM_TIME)
      volumeMounts:
        - mountPath: {{ .Values.global.DDS_CONFIG_MOUNTPATH | quote }}
          name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
  volumes:
    - name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
      configMap:
        name: {{ .Values.global.DDS_CONFIG_VOLUME | quote }}
